{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Preco_atual from \"../components/Preco_atual\";\nimport Grafico from \"../components/Grafico\";\nimport Lista_de_cotacao from \"../components/Lista_de_cotacao\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction addZero(number) {\n  if (number <= 9) {\n    return \"0\" + number;\n  }\n\n  return number;\n}\n\nfunction url(qtdDays) {\n  var date = new Date();\n  var listlastDays = qtdDays;\n  var end_date = date.getFullYear() + \"-{addZero$(date.getMonth()+1)}-\" + addZero(date.getDate());\n  date.setDate(date.getDate() - listlastDays);\n  var start_date = date.getFullYear() + \"-{addZero$(date.getMonth()+1)}-\" + addZero(date.getDate());\n  return \"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + start_date + \"&end=\" + end_date;\n  ;\n}\n\nfunction getListCoins(url) {\n  var response, retunrApi, selectListQuotations, queryCoinsList, data;\n  return _regeneratorRuntime.async(function getListCoins$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 5:\n          retunrApi = _context.sent;\n          selectListQuotations = retunrApi.bpi;\n          queryCoinsList = Object.keys(selectListQuotations).map(function (key) {\n            return {\n              data: key.split(\"-\").reverse().join(\"/\"),\n              valor: selectListQuotations[key]\n            };\n          });\n          data = queryCoinsList.reverse();\n          console.log(data);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getPriceCoinsGraphic(url) {\n  var responseG, returnApiG, selectListQuotationsG, queryCoinsListG, dataG;\n  return _regeneratorRuntime.async(function getPriceCoinsGraphic$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          responseG = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(responseG.json());\n\n        case 5:\n          returnApiG = _context2.sent;\n          selectListQuotationsG = returnApiG.bpi;\n          queryCoinsListG = Object.keys(selectListQuotationsG).map(function (key) {\n            return selectListQuotationsG[key];\n          });\n          dataG = queryCoinsListG;\n          console.log(dataG);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function Sistema() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coinsList = _useState2[0],\n      setcoinsList = _useState2[1];\n\n  var _useState3 = useState([0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coinsGrafichList = _useState4[0],\n      setcoinsGrafichList = _useState4[1];\n\n  var _useState5 = useState(30),\n      _useState6 = _slicedToArray(_useState5, 2),\n      days = _useState6[0],\n      setdays = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      updateData = _useState8[0],\n      setupdateData = _useState8[1];\n\n  function updateDay(number) {\n    setdays(number);\n    setupdateData(true);\n  }\n\n  useEffect(function () {\n    getListCoins(url(days)).then(function (data) {\n      setcoinsList(data);\n    });\n    getPriceCoinsGraphic(url(days)).then(function (dataG) {\n      setcoinsGrafichList(dataG);\n    });\n\n    if (updateData) {\n      setupdateData(false);\n    }\n  }, [updateData]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#303030',\n      alignItems: 'center'\n    },\n    children: [_jsx(Preco_atual, {}), _jsx(Grafico, {}), _jsx(Lista_de_cotacao, {\n      filterDay: updateDay,\n      ListTransactions: coinsList\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","Preco_atual","Grafico","Lista_de_cotacao","addZero","number","url","qtdDays","date","Date","listlastDays","end_date","getFullYear","getDate","setDate","start_date","getListCoins","fetch","response","json","retunrApi","selectListQuotations","bpi","queryCoinsList","Object","keys","map","key","data","split","reverse","join","valor","console","log","getPriceCoinsGraphic","responseG","returnApiG","selectListQuotationsG","queryCoinsListG","dataG","Sistema","coinsList","setcoinsList","coinsGrafichList","setcoinsGrafichList","days","setdays","updateData","setupdateData","updateDay","then","flex","backgroundColor","alignItems"],"sources":["C:/Users/geand/Desktop/PC/projetos/app-bitcoin/src/pages/Sistema.tsx"],"sourcesContent":["\r\nimport React, {useState, useEffect} from 'react'\r\nimport { View } from 'react-native'\r\n\r\n//importando o componentes\r\n\r\n//valor atual do bitcoin\r\nimport Preco_atual from '../components/Preco_atual'\r\n\r\n//grafico mostrando a variacao do preco\r\nimport Grafico from '../components/Grafico'\r\n\r\n//botoes de filtragem de dados da api\r\nimport Lista_de_cotacao from '../components/Lista_de_cotacao'\r\n\r\n// aqui vamos tratar os dados da api\r\n\r\n//adcionando 0 para ficar no padrao americano e nao causar erro na api\r\nfunction addZero(number){\r\n\r\n  //se number for menor ou igual 9 adcione um zero\r\n  if(number <=9){\r\n      return \"0\" + number\r\n  }\r\n  return number\r\n}\r\n\r\nfunction url (qtdDays){\r\n\r\n  //constante para trabalhar com as datas\r\n  const date = new Date();\r\n\r\n  //quantidade de dias que passaram\r\n  const listlastDays = qtdDays\r\n\r\n  //const que finaliza a pesquisa \r\n  const end_date =\r\n   \r\n    //pegando o ano e pegando mes e dia e adcionando 0 para nao quebrara url \r\n    `${date.getFullYear()}-{addZero$(date.getMonth()+1)}-${addZero(date.getDate())}`;\r\n\r\n    //setando apos o fim do calulo do final da data e subtrai a quantidade de dias \r\n    date.setDate(date.getDate() - listlastDays)\r\n \r\n  //cont que inica a pesquisa\r\n  const start_date = `${date.getFullYear()}-{addZero$(date.getMonth()+1)}-${addZero(date.getDate())}`;\r\n\r\n  //passando a url da api \r\n  return `https://api.coindesk.com/v1/bpi/historical/close.json?start=${start_date}&end=${end_date}`;;\r\n\r\n}\r\n\r\n//vai pegar os parametros da url e colocar na lista \r\nasync function getListCoins(url) {\r\n  let response = await fetch(url);\r\n  let retunrApi = await response.json();\r\n  let selectListQuotations = retunrApi.bpi;\r\n  const queryCoinsList = Object.keys(selectListQuotations).map((key) => {\r\n    return {\r\n      data: key.split(\"-\").reverse().join(\"/\"),\r\n      valor: selectListQuotations[key],\r\n    };\r\n  });\r\n  let data = queryCoinsList.reverse();\r\n // return data;\r\n console.log(data);\r\n\r\n}\r\n\r\n//vai pegaro os paramentros e colocar no preco \r\nasync function getPriceCoinsGraphic(url) {\r\n  let responseG = await fetch(url);\r\n  let returnApiG = await responseG.json();\r\n  let selectListQuotationsG = returnApiG.bpi;\r\n  const queryCoinsListG = Object.keys(selectListQuotationsG).map((key) => {\r\n    return selectListQuotationsG[key];\r\n  });\r\n  let dataG = queryCoinsListG;\r\n//  return dataG;\r\nconsole.log(dataG);\r\n\r\n}\r\n  \r\nexport function Sistema() {\r\n\r\n  //constantesp para armazenar valores selecionados\r\n  const [coinsList, setcoinsList] = useState([]);\r\n  const [coinsGrafichList, setcoinsGrafichList] = useState([0]);\r\n  const [days, setdays] = useState(30);//quantidade de itens exibidos na lista \r\n  const [updateData, setupdateData] = useState(true);\r\n\r\n  function updateDay(number) {\r\n    setdays(number);\r\n    setupdateData(true);\r\n}\r\n\r\nuseEffect(() => {\r\n    getListCoins(url(days)).then((data) => {\r\n      setcoinsList(data);\r\n    });\r\n    getPriceCoinsGraphic(url(days)).then((dataG) => {\r\n      setcoinsGrafichList(dataG);\r\n    });\r\n    if (updateData) {\r\n      setupdateData(false);\r\n    }\r\n  }, [updateData]);\r\n  \r\n    return (\r\n\r\n        <View style={{ flex: 1 , backgroundColor: '#303030', alignItems: 'center'}}>\r\n\r\n          <Preco_atual/>\r\n\r\n          <Grafico/>\r\n\r\n          <Lista_de_cotacao filterDay={updateDay} ListTransactions={coinsList}/>\r\n\r\n        </View>\r\n\r\n    )\r\n    \r\n    \r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}