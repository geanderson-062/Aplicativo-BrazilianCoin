{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { Fragment } from 'react';\nimport styles from \"./style\";\nimport Itens_de_cotacao from \"./Itens_de_cotacao/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction addZero(number) {\n  if (number <= 9) {\n    return \"0\" + number;\n  }\n\n  return number;\n}\n\nfunction url(qtdDays) {\n  var date = new Date();\n  var listlastDays = qtdDays;\n  var end_date = date.getFullYear() + \"-{addZero$(date.getMonth()+1)}-\" + addZero(date.getDate());\n  date.setDate(date.getDate() - listlastDays);\n  var start_date = date.getFullYear() + \"-{addZero$(date.getMonth()+1)}-\" + addZero(date.getDate());\n  return \"https://api.coindesk.com/v1/bpi/historical/close.json?start=\" + start_date + \"&end=\" + end_date;\n  ;\n}\n\nfunction getListCoins(url) {\n  var response, retunrApi, selectListQuotations, queryCoinsList, data;\n  return _regeneratorRuntime.async(function getListCoins$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 5:\n          retunrApi = _context.sent;\n          selectListQuotations = retunrApi.bpi;\n          queryCoinsList = Object.keys(selectListQuotations).map(function (key) {\n            return {\n              data: key.split(\"-\").reverse().join(\"/\"),\n              valor: selectListQuotations[key]\n            };\n          });\n          data = queryCoinsList.reverse();\n          return _context.abrupt(\"return\", data);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getPriceCoinsGraphic(url) {\n  var responseG, returnApiG, selectListQuotationsG, queryCoinsListG, dataG;\n  return _regeneratorRuntime.async(function getPriceCoinsGraphic$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          responseG = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(responseG.json());\n\n        case 5:\n          returnApiG = _context2.sent;\n          selectListQuotationsG = returnApiG.bpi;\n          queryCoinsListG = Object.keys(selectListQuotationsG).map(function (key) {\n            return selectListQuotationsG[key];\n          });\n          dataG = queryCoinsListG;\n          return _context2.abrupt(\"return\", dataG);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default function Lista_de_cotacao() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      coinsList = _useState2[0],\n      setcoinsList = _useState2[1];\n\n  var _useState3 = useState([0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coinsGrafichList = _useState4[0],\n      setcoinsGrafichList = _useState4[1];\n\n  var _useState5 = useState(30),\n      _useState6 = _slicedToArray(_useState5, 2),\n      days = _useState6[0],\n      setdays = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      updateData = _useState8[0],\n      setupdateData = _useState8[1];\n\n  function updateDay(number) {\n    setdays(number);\n    setupdateData(true);\n  }\n\n  useEffect(function () {\n    getListCoins(url(days)).then(function (data) {\n      setcoinsList(data);\n    });\n    getPriceCoinsGraphic(url(days)).then(function (dataG) {\n      setcoinsGrafichList(dataG);\n    });\n\n    if (updateData) {\n      setupdateData(false);\n    }\n  }, [updateData]);\n  var daysQuery = props.updateDay;\n  var ListTransactions = props.coinsList;\n  return _jsxs(Fragment, {\n    children: [_jsxs(View, {\n      style: styles.Filtros,\n      children: [\" \", _jsx(TouchableOpacity, {\n        style: styles.buttonClick,\n        onPress: function onPress() {\n          return daysQuery(7);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"7D\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonClick,\n        onPress: function onPress() {\n          return daysQuery(15);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"15D\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonClick,\n        onPress: function onPress() {\n          return daysQuery(30);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"1M\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonClick,\n        onPress: function onPress() {\n          return daysQuery(90);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"3M\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonClick,\n        onPress: function onPress() {\n          return daysQuery(180);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"6M\"\n        })\n      })]\n    }), _jsx(ScrollView, {\n      children: _jsx(FlatList, {\n        data: props.ListTransactions,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(Itens_de_cotacao, {\n            valor: item.valor,\n            data: item.data\n          });\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","Fragment","styles","Itens_de_cotacao","addZero","number","url","qtdDays","date","Date","listlastDays","end_date","getFullYear","getDate","setDate","start_date","getListCoins","fetch","response","json","retunrApi","selectListQuotations","bpi","queryCoinsList","Object","keys","map","key","data","split","reverse","join","valor","getPriceCoinsGraphic","responseG","returnApiG","selectListQuotationsG","queryCoinsListG","dataG","Lista_de_cotacao","useState","coinsList","setcoinsList","coinsGrafichList","setcoinsGrafichList","days","setdays","updateData","setupdateData","updateDay","useEffect","then","daysQuery","props","ListTransactions","Filtros","buttonClick","buttonText","item"],"sources":["C:/Users/geand/Desktop/PC/projetos/app-bitcoin/src/components/Lista_de_cotacao/index.js"],"sourcesContent":["import { ScrollView, Text, View, TouchableOpacity, FlatList } from 'react-native'\r\nimport React, { Fragment } from 'react'\r\nimport styles from './style'//importando o style\r\nimport Itens_de_cotacao from './Itens_de_cotacao/index'\r\n\r\n// aqui vamos tratar os dados da api\r\n\r\n//adcionando 0 para ficar no padrao americano e nao causar erro na api\r\nfunction addZero(number){\r\n\r\n  //se number for menor ou igual 9 adcione um zero\r\n  if(number <=9){\r\n      return \"0\" + number\r\n  }\r\n  return number\r\n}\r\n\r\nfunction url (qtdDays){\r\n\r\n  //constante para trabalhar com as datas\r\n  const date = new Date();\r\n\r\n  //quantidade de dias que passaram\r\n  const listlastDays = qtdDays\r\n\r\n  //const que finaliza a pesquisa \r\n  const end_date =\r\n   \r\n    //pegando o ano e pegando mes e dia e adcionando 0 para nao quebrara url \r\n    `${date.getFullYear()}-{addZero$(date.getMonth()+1)}-${addZero(date.getDate())}`;\r\n\r\n    //setando apos o fim do calulo do final da data e subtrai a quantidade de dias \r\n    date.setDate(date.getDate() - listlastDays)\r\n \r\n  //cont que inica a pesquisa\r\n  const start_date = `${date.getFullYear()}-{addZero$(date.getMonth()+1)}-${addZero(date.getDate())}`;\r\n\r\n  //passando a url da api \r\n  return `https://api.coindesk.com/v1/bpi/historical/close.json?start=${start_date}&end=${end_date}`;;\r\n\r\n}\r\n\r\n//vai pegar os parametros da url e colocar na lista \r\nasync function getListCoins(url) {\r\n  let response = await fetch(url);\r\n  let retunrApi = await response.json();\r\n  let selectListQuotations = retunrApi.bpi;\r\n  const queryCoinsList = Object.keys(selectListQuotations).map((key) => {\r\n    return {\r\n      data: key.split(\"-\").reverse().join(\"/\"),\r\n      valor: selectListQuotations[key],\r\n    };\r\n  });\r\n  let data = queryCoinsList.reverse();\r\n  return data; \r\n\r\n}\r\n\r\n//vai pegaro os paramentros e colocar no preco \r\nasync function getPriceCoinsGraphic(url) {\r\n  let responseG = await fetch(url);\r\n  let returnApiG = await responseG.json();\r\n  let selectListQuotationsG = returnApiG.bpi;\r\n  const queryCoinsListG = Object.keys(selectListQuotationsG).map((key) => {\r\n    return selectListQuotationsG[key];\r\n  });\r\n  let dataG = queryCoinsListG;\r\n  return dataG;\r\n\r\n}\r\n\r\n//nessa secao deve ser mostrado o preco atual em destaque\r\n\r\nexport default function Lista_de_cotacao() {\r\n\r\n   //constantesp para armazenar valores selecionados\r\n   const [coinsList, setcoinsList] = useState([]);\r\n   const [coinsGrafichList, setcoinsGrafichList] = useState([0]);\r\n   const [days, setdays] = useState(30);//quantidade de itens exibidos na lista \r\n   const [updateData, setupdateData] = useState(true);\r\n \r\n   function updateDay(number) {\r\n     setdays(number);\r\n     setupdateData(true);\r\n }\r\n \r\n useEffect(() => {\r\n     getListCoins(url(days)).then((data) => {\r\n       setcoinsList(data);\r\n     });\r\n     getPriceCoinsGraphic(url(days)).then((dataG) => {\r\n       setcoinsGrafichList(dataG);\r\n     });\r\n     if (updateData) {\r\n       setupdateData(false);\r\n     }\r\n   }, [updateData]);\r\n\r\n  //filters days vem da page sistema\r\n  const daysQuery = props.updateDay //erro está aqui como vamos resolver? \r\n  const ListTransactions = props.coinsList //erro está aqui como vamos resolver? \r\n \r\n\r\n    return (\r\n\r\n    //o fragment permite que componentes sejam criados fora da view\r\n    <Fragment>\r\n\r\n       <View style={styles.Filtros}> {/*dentro dessa view vai ficar os botoes de dias e mes do app*/}\r\n\r\n         <TouchableOpacity\r\n           style={styles.buttonClick}\r\n           onPress={ ()=> daysQuery(7) } //quando o botao for clicado\r\n         >\r\n             <Text style={styles.buttonText}>7D</Text>\r\n         </TouchableOpacity>\r\n\r\n         <TouchableOpacity\r\n           style={styles.buttonClick}\r\n           onPress={ ()=> daysQuery(15) } //quando o botao for clicado\r\n         >\r\n             <Text style={styles.buttonText}>15D</Text>\r\n         </TouchableOpacity>\r\n\r\n         <TouchableOpacity\r\n           style={styles.buttonClick}\r\n           onPress={ ()=> daysQuery(30) } //quando o botao for clicado\r\n         >\r\n             <Text style={styles.buttonText}>1M</Text>\r\n         </TouchableOpacity>\r\n\r\n         <TouchableOpacity\r\n           style={styles.buttonClick}\r\n           onPress={ ()=> daysQuery(90) } //quando o botao for clicado\r\n         >\r\n             <Text style={styles.buttonText}>3M</Text>\r\n         </TouchableOpacity>\r\n\r\n         <TouchableOpacity\r\n           style={styles.buttonClick}\r\n           onPress={ ()=> daysQuery(180) } //quando o botao for clicado\r\n         >\r\n             <Text style={styles.buttonText}>6M</Text>\r\n         </TouchableOpacity>\r\n\r\n       </View>\r\n\r\n        <ScrollView>\r\n          \r\n        <FlatList\r\n        \r\n        data = { props.ListTransactions }\r\n        renderItem={ ( {item} ) => { \r\n          return <Itens_de_cotacao valor={item.valor} data={item.data}/>\r\n        }}\r\n        />\r\n\r\n       </ScrollView>\r\n\r\n    </Fragment>\r\n\r\n    \r\n  \r\n    )\r\n  \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}